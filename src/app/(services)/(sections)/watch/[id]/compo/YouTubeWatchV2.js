/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/EVzvy4Caiop
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Libre_Franklin } from 'next/font/google'
import { Rubik } from 'next/font/google'

libre_franklin({
  subsets: ['latin'],
  display: 'swap',
})

rubik({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
import Link from "next/link"
import { Button } from "@/components/ui/button"
import { CardTitle, CardDescription, CardHeader, CardContent, Card } from "@/components/ui/card"
import { Input } from "@/components/ui/input"
import { DropdownMenuTrigger, DropdownMenuLabel, DropdownMenuSeparator, DropdownMenuItem, DropdownMenuContent, DropdownMenu } from "@/components/ui/dropdown-menu"
import Image from "next/image"
import Video from "../video"
import randomfeed from "@/app/(root)/get/randomfeed"
import { relativeDate, relativeNumber } from "@/lib/funcs"
import { tempViews } from "@/app/(services)/tempViews"
import { getPost } from "@/app/(get)/api/getPost/getPost"






export async function YouTubeWatchV2({id}) {
  // let postx = await post(id)

  let postx = await getPost(id);


  let views = await tempViews(id);


  return (
    (<div className="w-full">
      {
        // JSON.stringify(postx)
      }
      <div className="flex sm:flex-col">

        <main className="flex gap-6 p-0 md:p-6 flex-col sm:flex-row">
          <div className="flex flex-col gap-4 sm:w-2/3">
            <div className="rounded-xl overflow-hidden">
              <span className="w-full aspect-video rounded-md bg-muted" />
              <Video contentURL={postx.contentURL} image={postx.image}/>
            </div>
            <div className="py-2 flex flex-col gap-2">
              <h1 className="text-xl font-semibold line-clamp-2">
                {postx.title}
              </h1>
              <div className="flex gap-2 items-center">
                <Link href={"/"+postx.author.username}>
                
                <div className="flex gap-2 items-center">
                  <img
                    alt="Thumbnail"
                    className="rounded-full object-cover aspect-square"
                    height={40}
                    src={postx.author?.avatar}
                    width={40} />
                  <div className="text-sm">
                    <div className="font-semibold">{postx.author?.name}</div>
                    <div className="text-xs text-gray-500 dark:text-gray-400">50M subscribers</div>
                  </div>
                </div>
                </Link>
                <div className="ml-auto">
                  <Button variant="outline">Subscribe</Button>
                </div>
              </div>
            </div>
            <div className="bg-gray-100 rounded-xl p-4 text-sm dark:bg-gray-800">
              <div className="views">{postx.tempViews}</div>
              <p>
                {postx.content}
              </p>
            </div>
          </div>
          <div className="flex flex-col gap-4">
            <RecomenddedVideos/>
            
          </div>
        </main>
      </div>
    </div>)
  );
}
const RecomenddedVideos = async () => {
  let posts = await randomfeed({limit : 10,type : "video"});
  let videos = posts.map((post,i) => {
    return <RecomenddedVideo key={i} video={post}/>;
  })
  return videos;
}

const RecomenddedVideo = ({video}) => {

  return <div className="flex items-start gap-4 relative">
  <Link className="absolute inset-0" href={"/watch/"+video?.id}>
    <span className="sr-only">View</span>
  </Link>
  <img
    alt="Thumbnail"
    className="aspect-video rounded-lg object-cover"
    height={94}
    src={video?.image || "/placeholder.svg"}
    width={168} />
  <div className="text-sm">
    <div className="font-medium line-clamp-2">{video?.title}</div>
    <div className="text-xs text-gray-500 line-clamp-1 dark:text-gray-400">{video?.user?.name}</div>
    <div className="text-xs text-gray-500 line-clamp-1 dark:text-gray-400">{relativeNumber(parseInt(video?.tempViews))} views Â· { relativeDate(video?.createdAt)}</div>
  </div>
</div>
}