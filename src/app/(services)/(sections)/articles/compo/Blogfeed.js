/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/0BzOanP5a19
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Chivo } from 'next/font/google'
import { Rubik } from 'next/font/google'

chivo({
  subsets: ['latin'],
  display: 'swap',
})

rubik({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
'use client'
import Link from "next/link"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"
import { Textarea } from "@/components/ui/textarea"
import { Button } from "@/components/ui/button"
import { relativeDate } from "@/lib/funcs";
import { useEffect, useState } from "react";
import Skeleton from "react-loading-skeleton"


export function Blogfeed() {
  const [loading, setLoading] = useState(true);
  const [feed, setFeed] = useState([]);

  useEffect(() => {
    const fetchdata = async () => {
      try {
        const res = await fetch("/api/randomfeed?limit=7&type=article");
        const data = await res.json();
        setFeed(data.data);
        setLoading(false);
        console.log(feed, loading);
      } catch (error) {
        console.error("Error fetching data:", error);
        setLoading(false);
      }
    };

    fetchdata();
  }, []); // Empty dependency array ensures this effect runs only once on mount

  // Splitting the feed array into two separate arrays
  const remainingPost = feed.slice(1);
  const firstpost = feed[0]


  return (
    (loading)?(<Loader/>):(<div className="flex flex-col min-h-screen">
      <header className="bg-gray-900 text-white py-6 md:py-8 lg:py-10">
        <div className="container mx-auto px-4 md:px-6 lg:px-8">
          <div className="grid grid-cols-1 md:grid-cols-2 gap-8 items-center">
            <div>
              <img
                alt="Featured Blog Post"
                className="rounded-lg object-cover"
                height={500}
                src={firstpost?.contentURL || "/placeholder.svg"}
                style={{
                  aspectRatio: "800/500",
                  objectFit: "cover",
                }}
                width={800} />
            </div>
            <div>
              <span className="text-sm font-medium text-gray-400 uppercase">Featured Post</span>
              <h1 className="text-3xl md:text-4xl lg:text-5xl font-bold mt-2">{firstpost?.title}</h1>
              <p className="text-gray-300 mt-4">
                {firstpost.content.substring(0,200)}
              </p>
              <Link
                className="inline-flex items-center mt-6 bg-gray-800 hover:bg-gray-700 text-white font-medium py-2 px-4 rounded-md"
                href={"/article/"+firstpost?.id}>
                Read More
                <ArrowRightIcon className="ml-2 h-5 w-5" />
              </Link>
            </div>
          </div>
        </div>
      </header>
      <main className="flex-1">
        <section className="py-12 md:py-16 lg:py-20">
          <div className="container mx-auto px-4 md:px-6 lg:px-8">
            <h2 className="text-2xl md:text-3xl lg:text-4xl font-bold mb-8">Recent Posts</h2>
            <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-8">


            {remainingPost.map((post,i)=> 
          <div key={i} className="bg-white dark:bg-slate-900 rounded-lg shadow-lg overflow-hidden">
          <Link
              className=""
              href={"/article/"+post.id}><img
            alt="Blog Post 1"
            className="w-full h-48 object-cover"
            height={250}
            src={post.contentURL || "/placeholder.svg"}
            style={{
              aspectRatio: "400/250",
              objectFit: "cover",
            }}
            width={400} />
          <div className="p-6 ">
            <h3 className="text-xl font-bold mb-2">{post.title}</h3>
            <p className="text-gray-600 mb-4">
              {post.content.substring(0,200)}
              </p>
            

                <span className="inline-flex items-center dark:text-slate-200 text-gray-800 hover:text-gray-900 font-medium">
              Read More
              <ArrowRightIcon className="ml-2 h-5 w-5" />
              </span>
          </div>
            </Link>
        </div>
      )}

              

            </div>
          </div>
        </section>
      </main>
     
    </div>)
  );
}

function ArrowRightIcon(props) {
  return (
    (<svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round">
      <path d="M5 12h14" />
      <path d="m12 5 7 7-7 7" />
    </svg>)
  );
}


function SearchIcon(props) {
  return (
    (<svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round">
      <circle cx="11" cy="11" r="8" />
      <path d="m21 21-4.3-4.3" />
    </svg>)
  );
}


//

function Loader() {
  return (
    "....."
  )
}